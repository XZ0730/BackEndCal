// Code generated by hertz generator.

package calculate

import (
	"context"
	"net/http"

	"github.com/cloudwego/hertz/pkg/app"
)

func rootMw() []app.HandlerFunc {
	// your code...
	return nil
}

func _csMw() []app.HandlerFunc {
	// your code...
	return nil
}

func _calculateMw() []app.HandlerFunc {
	// your code...
	return nil
}

func _ratecallMw() []app.HandlerFunc {
	// your code...
	return nil
}

func _corsMw() app.HandlerFunc {
	// your code...
	return func(c context.Context, ctx *app.RequestContext) {
		method := ctx.Request.Method
		ctx.Header("Access-Control-Allow-Origin", "*")
		ctx.Header("Access-Control-Allow-Methods", "POST, GET, OPTIONS, PUT, DELETE, UPDATE")
		ctx.Header("Access-Control-Allow-Headers", "*")
		ctx.Header("Access-Control-Expose-Headers", "Content-Length, Access-Control-Allow-Origin, Access-Control-Allow-Headers, Cache-Control, Content-Language, Content-Type")
		ctx.Header("Access-Control-Allow-Credentials", "true")

		//放行所有OPTIONS方法
		if string(method()) == "OPTIONS" {
			ctx.AbortWithStatus(http.StatusNoContent)
		}
		// invalid operation: method == "OPTIONS" (mismatched types func() []byte and untyped string)
		// 处理请求
		ctx.Next(c)
	}
}

func _rateMw() []app.HandlerFunc {
	// your code...
	return nil
}

func _setrateMw() []app.HandlerFunc {
	// your code...
	return nil
}

func _calculate0Mw() []app.HandlerFunc {
	// your code...
	return nil
}

func _gethistoryMw() []app.HandlerFunc {
	// your code...
	return nil
}

func _getrateMw() []app.HandlerFunc {
	// your code...
	return nil
}
